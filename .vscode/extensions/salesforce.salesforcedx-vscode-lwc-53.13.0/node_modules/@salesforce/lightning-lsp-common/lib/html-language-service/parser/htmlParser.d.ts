export declare class Node {
    start: number;
    end: number;
    children: Node[];
    parent?: Node;
    tag: string | undefined;
    closed: boolean;
    endTagStart: number | undefined;
    attributes: {
        [name: string]: string | null;
    } | undefined;
    get attributeNames(): string[];
    constructor(start: number, end: number, children: Node[], parent?: Node);
    isSameTag(tagInLowerCase: string): boolean;
    get firstChild(): Node | undefined;
    get lastChild(): Node | undefined;
    findNodeBefore(offset: number): Node;
    findNodeAt(offset: number): Node;
}
export interface HTMLDocument {
    roots: Node[];
    findNodeBefore(offset: number): Node;
    findNodeAt(offset: number): Node;
}
export declare function parse(text: string): HTMLDocument;
//# sourceMappingURL=htmlParser.d.ts.map