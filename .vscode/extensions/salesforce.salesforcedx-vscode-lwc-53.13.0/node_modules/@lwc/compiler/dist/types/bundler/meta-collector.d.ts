import { ApiDecorator, ModuleExports, TrackDecorator, WireDecorator, Location, ClassMember } from "@lwc/babel-plugin-component";
import { TemplateModuleDependency } from "@lwc/template-compiler";
import { ModuleImportLocation } from "./import-location-collector";
export declare type MetadataDecorators = Array<ApiDecorator | TrackDecorator | WireDecorator>;
export interface TemplateModuleDependencies {
    templatePath: string;
    moduleDependencies: TemplateModuleDependency[];
}
export interface BundleMetadata {
    decorators: MetadataDecorators;
    importLocations: ModuleImportLocation[];
    classMembers: ClassMember[];
    declarationLoc?: Location;
    doc?: string;
    experimentalTemplateDependencies?: TemplateModuleDependencies[];
    exports: ModuleExports[];
}
export declare class MetadataCollector {
    private decorators;
    private importLocations;
    private experimentalTemplateDependencies?;
    private classMembers;
    private declarationLoc?;
    private doc?;
    private exports;
    collectDecorator(decorator: ApiDecorator | TrackDecorator | WireDecorator): void;
    collectImportLocations(importLocations: ModuleImportLocation[]): void;
    collectClassMember(classMember: ClassMember): void;
    setDeclarationLoc(declarationLoc?: Location): void;
    setDoc(doc?: string): void;
    collectExports(exports: ModuleExports[]): void;
    collectExperimentalTemplateDependencies(templatePath: string, templateDependencies: TemplateModuleDependency[]): void;
    getMetadata(): BundleMetadata;
}
