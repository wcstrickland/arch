"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
let indexer;
function getAuraTags() {
    if (indexer) {
        return indexer.getAuraTags();
    }
    return new Map();
}
function getAuraByTag(tag) {
    if (indexer) {
        return indexer.getAuraByTag(tag);
    }
    return undefined;
}
function setIndexer(idx) {
    indexer = idx;
}
exports.setIndexer = setIndexer;
function getAuraTagProvider() {
    function addTags(collector) {
        for (const [tag, tagInfo] of getAuraTags()) {
            collector(tag, tagInfo.getHover(), tagInfo);
        }
    }
    function addAttributes(tag, collector) {
        const cTag = getAuraByTag(tag);
        if (cTag) {
            for (const info of cTag.attributes) {
                collector(info.name, info, info.type);
            }
        }
    }
    function addExpressions(templateTag, collector) {
        const cTag = getAuraByTag(templateTag);
        if (cTag) {
            cTag.attributes.forEach(attribute => {
                collector(attribute.name, null, null);
            });
            // cTag.methods.forEach(metadata => {
            //     collector(metadata.name, null, null);
            // });
        }
    }
    return {
        getId: () => 'aura',
        isApplicable: (languageId) => languageId === 'html',
        collectTags: (collector) => {
            addTags(collector);
        },
        collectAttributes: (tag, collector) => {
            if (tag) {
                addAttributes(tag, collector);
            }
        },
        collectValues: ( /*tag: string, attribute: string, collector: (value: string) => void*/) => {
            // TODO provide suggestions by consulting shapeService
        },
        // TODO move this to ICompletionParticipant
        collectExpressionValues: (templateTag, collector) => {
            addExpressions(templateTag, collector);
        },
        getTagInfo: (tag) => getAuraByTag(tag),
        getGlobalAttributes: () => [],
    };
}
exports.getAuraTagProvider = getAuraTagProvider;
//# sourceMappingURL=auraTags.js.map