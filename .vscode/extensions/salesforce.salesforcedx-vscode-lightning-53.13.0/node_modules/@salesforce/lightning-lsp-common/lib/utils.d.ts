import { TextDocument, FileEvent } from 'vscode-languageserver';
import { WorkspaceContext } from './context';
export declare const glob: Function;
export declare function toResolvedPath(uri: string): string;
export declare function isLWCWatchedDirectory(context: WorkspaceContext, uri: string): Promise<boolean>;
export declare function isAuraWatchedDirectory(context: WorkspaceContext, uri: string): Promise<boolean>;
/**
 * @return true if changes include a directory delete
 */
export declare function includesDeletedLwcWatchedDirectory(context: WorkspaceContext, changes: FileEvent[]): Promise<boolean>;
export declare function includesDeletedAuraWatchedDirectory(context: WorkspaceContext, changes: FileEvent[]): Promise<boolean>;
export declare function isLWCRootDirectoryCreated(context: WorkspaceContext, changes: FileEvent[]): boolean;
export declare function isAuraRootDirectoryCreated(context: WorkspaceContext, changes: FileEvent[]): boolean;
export declare function unixify(filePath: string): string;
export declare function relativePath(from: string, to: string): string;
export declare function pathStartsWith(path: string, root: string): boolean;
export declare function getExtension(textDocument: TextDocument): string;
export declare function getResourcePath(resourceName: string): string;
export declare function getSfdxResource(resourceName: string): string;
export declare function getCoreResource(resourceName: string): string;
export declare function appendLineIfMissing(file: string, line: string): Promise<void>;
/**
 * Deep merges the 'from' object into the 'to' object
 * (assumes simple JSON config objects)
 * @return true if the 'to' object was modified, false otherwise
 */
export declare function deepMerge(to: object, from: object): boolean;
/**
 * @return string showing elapsed milliseconds from start mark
 */
export declare function elapsedMillis(start: [number, number]): string;
export declare const memoize: (fn: any) => any;
export declare function readJsonSync(file: string): any;
export declare function writeJsonSync(file: string, json: any): any;
//# sourceMappingURL=utils.d.ts.map