import { Observable } from 'rxjs/Observable';
import * as vscode from 'vscode';
import { CommandExecution } from '../cli';
import { ChannelService } from './index';
export declare const STATUS_BAR_MSG_TIMEOUT_MS = 5000;
/**
 * A centralized location for all notification functionalities.
 */
export declare class NotificationService {
    private static instance;
    static getInstance(): NotificationService;
    showErrorMessage(message: string, ...items: string[]): Thenable<string | undefined>;
    showInformationMessage(message: string, ...items: string[]): Thenable<string | undefined>;
    showWarningMessage(message: string, ...items: string[]): Thenable<string | undefined>;
    showWarningModal(message: string, ...items: string[]): Thenable<string | undefined>;
    reportCommandExecutionStatus(execution: CommandExecution, channelService: ChannelService | undefined, cancellationToken?: vscode.CancellationToken): void;
    reportExecutionStatus(executionName: string, channelService: ChannelService | undefined, observable: Observable<number | undefined>, cancellationToken?: vscode.CancellationToken): void;
    showFailedExecution(executionName: string): void;
    showCanceledExecution(executionName: string): void;
    showSuccessfulExecution(executionName: string, channelService: ChannelService | undefined): Promise<void>;
    reportExecutionError(executionName: string, observable: Observable<Error | undefined>): void;
}
