"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
class LogContextUtil {
    getFileSize(filePath) {
        try {
            const stats = fs.statSync(filePath);
            return stats.size;
        }
        catch (e) {
            return 0;
        }
    }
    readLogFile(logFilePath) {
        try {
            return fs
                .readFileSync(logFilePath, 'utf-8')
                .trim()
                .split(/\r?\n/);
        }
        catch (e) {
            return [];
        }
    }
    stripBrackets(value) {
        return value.replace('[', '').replace(']', '');
    }
    substringUpToLastPeriod(value) {
        return value.substring(0, value.lastIndexOf('.'));
    }
    substringFromLastPeriod(value) {
        const valueSplit = value.split('.');
        return valueSplit.length > 1 ? valueSplit[valueSplit.length - 1] : value;
    }
    surroundBlobsWithQuotes(value) {
        return value.replace(/(BLOB\(\d+ bytes\))/g, '"$1"');
    }
    removeQuotesFromBlob(value) {
        return value.replace(/'(BLOB\(\d+ bytes\))'/g, '$1');
    }
}
exports.LogContextUtil = LogContextUtil;
//# sourceMappingURL=logContextUtil.js.map