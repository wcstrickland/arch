"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
class Handles {
    constructor(startHandle) {
        this.START_HANDLE = 1000;
        this._handleMap = new Map();
        this._nextHandle =
            typeof startHandle === 'number' ? startHandle : this.START_HANDLE;
    }
    reset() {
        this._nextHandle = this.START_HANDLE;
        this._handleMap = new Map();
    }
    create(value) {
        const handle = this._nextHandle++;
        this._handleMap.set(handle, value);
        return handle;
    }
    get(handle, dflt) {
        return (this._handleMap.get(handle) || dflt);
    }
    copy() {
        const newHandles = Object.assign(Object.create(Object.getPrototypeOf(this)));
        newHandles.START_HANDLE = this.START_HANDLE;
        newHandles._nextHandle = this._nextHandle;
        newHandles._handleMap = new Map();
        this._handleMap.forEach((value, key) => {
            if (value.copy !== 'undefined') {
                newHandles._handleMap.set(key, value.copy());
            }
        });
        return newHandles;
    }
}
exports.Handles = Handles;
//# sourceMappingURL=handles.js.map