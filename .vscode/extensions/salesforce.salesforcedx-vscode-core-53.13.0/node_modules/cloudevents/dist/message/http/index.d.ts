import { CloudEvent } from "../..";
import { Message } from "..";
/**
 * Serialize a CloudEvent for HTTP transport in binary mode
 * @implements {Serializer}
 * @see https://github.com/cloudevents/spec/blob/v1.0.1/http-protocol-binding.md#31-binary-content-mode
 *
 * @param {CloudEvent} event The event to serialize
 * @returns {Message} a Message object with headers and body
 */
export declare function binary(event: CloudEvent): Message;
/**
 * Serialize a CloudEvent for HTTP transport in structured mode
 * @implements {Serializer}
 * @see https://github.com/cloudevents/spec/blob/v1.0.1/http-protocol-binding.md#32-structured-content-mode
 *
 * @param {CloudEvent} event the CloudEvent to be serialized
 * @returns {Message} a Message object with headers and body
 */
export declare function structured(event: CloudEvent): Message;
/**
 * Determine if a Message is a CloudEvent
 * @implements {Detector}
 *
 * @param {Message} message an incoming Message object
 * @returns {boolean} true if this Message is a CloudEvent
 */
export declare function isEvent(message: Message): boolean;
/**
 * Converts a Message to a CloudEvent
 * @implements {Deserializer}
 *
 * @param {Message} message the incoming message
 * @return {CloudEvent} A new {CloudEvent} instance
 */
export declare function deserialize(message: Message): CloudEvent;
