import { ConvertOutputConfig, ConvertResult, SfdxFileFormat } from './types';
import { SourceComponent } from '../resolve';
import { ComponentSet } from '../collections';
import { RegistryAccess } from '../registry';
export declare class MetadataConverter {
    static readonly PACKAGE_XML_FILE = "package.xml";
    static readonly DESTRUCTIVE_CHANGES_POST_XML_FILE = "destructiveChangesPost.xml";
    static readonly DESTRUCTIVE_CHANGES_PRE_XML_FILE = "destructiveChangesPre.xml";
    static readonly DEFAULT_PACKAGE_PREFIX = "metadataPackage";
    private registry;
    constructor(registry?: RegistryAccess);
    /**
     * Convert metadata components to another SFDX file format.
     *
     * @param components Components to convert
     * @param targetFormat Format to convert the component files to
     * @param output Configuration for outputting the converted files
     */
    convert(components: Iterable<SourceComponent>, targetFormat: SfdxFileFormat, output: ConvertOutputConfig): Promise<ConvertResult>;
    /**
     * Convert metadata components within a `ComponentSet` to another SFDX file format.
     *
     * @param componentSet ComponentSet to convert
     * @param targetFormat Format to convert the component files to
     * @param output Configuration for outputting the converted files
     */
    convert(componentSet: ComponentSet, targetFormat: SfdxFileFormat, output: ConvertOutputConfig): Promise<ConvertResult>;
    private getPackagePath;
    private getDestructiveManifest;
}
