/// <reference types="node" />
import { Connection } from '@salesforce/core';
import { EventEmitter } from 'events';
import { SObjectSelector, SObjectShortDescription } from '../describe';
import { SObjectCategory, SObjectRefreshSource } from '../types';
import { SObjectTransformer } from './sobjectTransformer';
export interface CancellationToken {
    isCancellationRequested: boolean;
}
export declare class SObjectTransformerFactory {
    static create(emitter: EventEmitter, cancellationToken: CancellationToken, projectPath: string, category: SObjectCategory, source: SObjectRefreshSource): Promise<SObjectTransformer>;
    static createConnection(projectPath: string): Promise<Connection>;
}
export declare class GeneralSObjectSelector implements SObjectSelector {
    private category;
    private source;
    constructor(category: SObjectCategory, source: SObjectRefreshSource);
    select(sobject: SObjectShortDescription): boolean;
    private isRequiredSObject;
}
